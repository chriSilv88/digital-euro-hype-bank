kind: Service
apiVersion: #{service.version}#
metadata:
  name: #{deploymentName}#
  namespace: #{namespace}#
spec:
  ports:
    - name: http-#{deploymentName}#
      port: 8080
  selector:
    app: #{deploymentName}#
  type: ClusterIP
---
kind: Deployment
apiVersion: #{deployment.version}#
metadata:
  name: #{deploymentName}#
  namespace: #{namespace}#
  labels:
    app: #{deploymentName}#
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: #{deploymentName}#
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: #{deploymentName}#
        release: #{version}#
        imageTag: #{version}##{envImageTag}#
        buildId: '#{Build.BuildId}#'
        azure.workload.identity/use: "true"
    spec:
      #{tolerations}#
      serviceAccountName: #{hype-vantaggi.service-account-name.keyvault}#
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - #{deploymentName}#
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: #{deploymentName}#
          image: #{containerRegistryDomain}#/#{imageName}#:#{version}##{envImageTag}#
          imagePullPolicy: #{image.pull.policy}#
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 41
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 60
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 340
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 2
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 400m
              memory: 750Mi
            requests:
              cpu: 100m
              memory: 750Mi
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
            - name: config-volume
              mountPath: "/config"
          env:
            - name: APP_LOG_LEVEL
              value: INFO
            - name: ROOT_LOG_LEVEL
              value: DEBUG
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: #{keyVaultName}#
        - name: config-volume
          configMap:
            name: configmap-#{deploymentName}#
            items:
              - key: application.yaml
                path: application.yaml
