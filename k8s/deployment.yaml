kind: Service
apiVersion: #{service.version}#
metadata:
  name: profile-vantaggi
  namespace: profile
spec:
  ports:
    - name: http-profile-vantaggi
      port: 8080
  selector:
    app: profile-vantaggi
  type: ClusterIP
---
kind: Deployment
apiVersion: #{deployment.version}#
metadata:
  name: profile-vantaggi
  namespace: profile
  labels:
    app: profile-vantaggi
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: 2
  selector:
    matchLabels:
      app: profile-vantaggi
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: profile-vantaggi
        release: #{setVersion.version}#
        imageTag: #{setVersion.version}##{envImageTag}#
        buildId: '#{Build.BuildId}#'
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - profile-vantaggi
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: profile-vantaggi
          image: #{containerRegistryDomain}#/profile-vantaggi:#{setVersion.version}##{envImageTag}#
          imagePullPolicy: #{image.pull.policy}#
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 41
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 60
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 340
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 2
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 400m
              memory: 600Mi
            requests:
              cpu: 100m
              memory: 600Mi
          volumeMounts:
            - name: config-volume
              mountPath: "/config"
          env:
            - name: OTEL_EXPORTER_OTLP_HEADERS
              value: elk-apm-token-header@azurekeyvault
            - name: OTEL_TRACES_EXPORTER
              value: otlp
            - name: OTEL_METRICS_EXPORTER
              value: otlp
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: #{apm-server-cloud.url}#
            - name: OTEL_SERVICE_NAME
              value: profile-vantaggi
            - name: OTEL_JAVAAGENT_EXTENSIONS
              value: "/app/opentelemetry-agent-extension.jar"
            - name: MONGO_CS
              value: "TODO@azurekeyvault"
            - name: APP_LOG_LEVEL
              value: WARN
            - name: ROOT_LOG_LEVEL
              value: INFO
      volumes:
        - name: config-volume
          configMap:
            name: configmap-profile-vantaggi
            items:
              - key: application.yaml
                path: application.yaml
